/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.93
 * Generated at: 2024-08-28 08:46:22 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;
import com.advancia.Modal.*;

public final class home_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(6);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_packages.add("com.advancia.Modal");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("java.util.List");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Kebab Maker</title>\r\n");
      out.write("<link\r\n");
      out.write("	href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n");
      out.write("	rel=\"stylesheet\"\r\n");
      out.write("	integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\"\r\n");
      out.write("	crossorigin=\"anonymous\">\r\n");
      out.write("<script\r\n");
      out.write("	src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\"\r\n");
      out.write("	integrity=\"sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz\"\r\n");
      out.write("	crossorigin=\"anonymous\"></script>\r\n");
      out.write("<!-- GET SECONDARY AND SAUCE VALUES -->\r\n");
      out.write("<script>\r\n");
      out.write("    document.addEventListener('DOMContentLoaded', function() {\r\n");
      out.write("    	document.getElementById('CreateKebabForm').addEventListener('submit', function(event) {\r\n");
      out.write("            // Prevent default form submission\r\n");
      out.write("            event.preventDefault();\r\n");
      out.write("\r\n");
      out.write("            // Get all checked secondary ingredient checkboxes\r\n");
      out.write("            const secondaryCheckboxes = document.querySelectorAll('input[name=\"secondary\"]:checked');\r\n");
      out.write("            const secondaryValues = Array.from(secondaryCheckboxes).map(cb => cb.value);\r\n");
      out.write("            document.getElementById('selectedSecondaryIds').value = secondaryValues.join(',');\r\n");
      out.write("            \r\n");
      out.write("                      \r\n");
      out.write("            // Get all checked sauce ingredient checkboxes\r\n");
      out.write("            const sauceCheckboxes = document.querySelectorAll('input[name=\"sauce\"]:checked');\r\n");
      out.write("            const sauceValues = Array.from(sauceCheckboxes).map(cb => cb.value);\r\n");
      out.write("            document.getElementById('selectedSauceIds').value = sauceValues.join(',');\r\n");
      out.write("\r\n");
      out.write("            // Continue with form submission\r\n");
      out.write("            this.submit();\r\n");
      out.write("        });\r\n");
      out.write("    });\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<!-- GET PRIMARY AND CONTAINER VALUES -->\r\n");
      out.write("<script>\r\n");
      out.write("	function setContainerValue(id) {\r\n");
      out.write("		// Set the value of the hidden input field\r\n");
      out.write("		document.getElementById('selectedContainer').value = id;\r\n");
      out.write("	}\r\n");
      out.write("	function setPrimaryValue(id) {\r\n");
      out.write("		// Set the value of the hidden input field\r\n");
      out.write("		document.getElementById('selectedPrimary').value = id;\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<!-- DISABLE CEATE BUTTON IF MISSING INGREDIENTS -->\r\n");
      out.write("<script>\r\n");
      out.write("document.addEventListener('DOMContentLoaded', function() {\r\n");
      out.write("    const addKebabButton = document.getElementById('addKebabButton');\r\n");
      out.write("    \r\n");
      out.write("    // Function to check conditions and enable/disable the button\r\n");
      out.write("    function checkConditions() {\r\n");
      out.write("        const primarySelected = document.getElementById('selectedPrimary').value !== \"\";\r\n");
      out.write("        const containerSelected = document.getElementById('selectedContainer').value !== \"\";\r\n");
      out.write("        const nameSelected = document.getElementById('selectedName').value.trim() !== \"\";\r\n");
      out.write("        const secondarySelected = document.querySelectorAll('input[name=\"secondary\"]:checked').length > 0;\r\n");
      out.write("\r\n");
      out.write("        if (primarySelected && containerSelected && nameSelected && secondarySelected) {\r\n");
      out.write("            addKebabButton.disabled = false;\r\n");
      out.write("        } else {\r\n");
      out.write("            addKebabButton.disabled = true;\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    // Add event listeners to inputs and checkboxes to call the check function\r\n");
      out.write("    document.getElementById('selectedName').addEventListener('input', checkConditions);\r\n");
      out.write("    \r\n");
      out.write("    document.querySelectorAll('input[name=\"secondary\"]').forEach(checkbox => {\r\n");
      out.write("        checkbox.addEventListener('change', checkConditions);\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    // Listen to dropdown changes for container and primary ingredients\r\n");
      out.write("    document.querySelectorAll('.dropdown-item').forEach(item => {\r\n");
      out.write("        item.addEventListener('click', function() {\r\n");
      out.write("            checkConditions();\r\n");
      out.write("        });\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    // Initial check when the page loads\r\n");
      out.write("    checkConditions();\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("        var inactivityTimeout;\r\n");
      out.write("\r\n");
      out.write("        function resetTimer() {\r\n");
      out.write("            clearTimeout(inactivityTimeout);\r\n");
      out.write("            inactivityTimeout = setTimeout(redirectToTimeoutPage, 5 * 60 * 1000); // 5 minutes\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function redirectToTimeoutPage() {\r\n");
      out.write("            window.location.href = 'login.jsp'; // Redirect to your session timeout page\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Reset timer on user interaction\r\n");
      out.write("        document.onload = resetTimer;\r\n");
      out.write("        document.onmousemove = resetTimer;\r\n");
      out.write("        document.onkeypress = resetTimer;\r\n");
      out.write("        document.onclick = resetTimer;\r\n");
      out.write("\r\n");
      out.write("        // Initialize timer on page load\r\n");
      out.write("        window.onload = resetTimer;\r\n");
      out.write("    </script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("	");

	User user = (User)request.getSession().getAttribute("User");
	if(user==null){
		request.getRequestDispatcher("login.jsp").forward(request, response);
	}
	boolean invalidKebab = request.getAttribute("invalidKebab") != null;
	boolean invalidUser = request.getAttribute("invalidUser") != null;
	List<Container> containerList = (List<Container>) request.getAttribute("Containers");
	List<PrimaryIngredient> primaryList = (List<PrimaryIngredient>) request.getAttribute("PrimaryIngredients");
	List<SecondaryIngredient> secondaryList = (List<SecondaryIngredient>) request.getAttribute("SecondaryIngredients");
	List<SauceIngredient> sauceList = (List<SauceIngredient>) request.getAttribute("Sauces");
	List<Kebab> kebabList = (List<Kebab>) request.getAttribute("Kebabs");
	
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<div class=\"container\">\r\n");
      out.write("		<!-- KEBAB LIST ROW -->\r\n");
      out.write("		<div class=\"row\">\r\n");
      out.write("			<!-- LEFT -->\r\n");
      out.write("			<div class=\"col-2 col-lg-3\">\r\n");
      out.write("				<form action=\"DeleteAllKebabServlet\" method=\"post\">\r\n");
      out.write("					<button class=\"btn btn-danger\" type=\"submit\"\r\n");
      out.write("						style=\"translate: 0px 100px;\">cancella kebabs</button>\r\n");
      out.write("				</form>\r\n");
      out.write("\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<!-- RIGHT -->\r\n");
      out.write("			<div class=\"col-10 col-lg-9\">\r\n");
      out.write("				<div class=\"d-flex align-items-center my-2\">\r\n");
      out.write("				<p class=\"me-3 mb-0\">Visualizza kebab creati</p>\r\n");
      out.write("				<p class=\"text-danger mb-0\">");
      out.print(invalidUser ? "Eseguire nuovamente il login, utente scollegato" : "");
      out.write("</p>\r\n");
      out.write("			</div>\r\n");
      out.write("				<div class=\"border border-dark my-4\">\r\n");
      out.write("					<div class=\"container\">\r\n");
      out.write("						<div class=\"row align-items-start\">\r\n");
      out.write("							<div class=\"col border\">Nome</div>\r\n");
      out.write("							<div class=\"col border\">Contenitore</div>\r\n");
      out.write("							<div class=\"col border\">Primario</div>\r\n");
      out.write("							<div class=\"col border\">Secondario</div>\r\n");
      out.write("							<div class=\"col border\">Salse</div>\r\n");
      out.write("						</div>\r\n");
      out.write("\r\n");
      out.write("						<div class=\"overflow-x-hidden overflow-y-auto\"\r\n");
      out.write("							style=\"height: 150px\">\r\n");
      out.write("							");

							if (kebabList != null && kebabList.size() != 0)
								for (Kebab k : kebabList) {
							
      out.write("\r\n");
      out.write("							<div class=\"row align-items-start\">\r\n");
      out.write("								<div class=\"col border\" style=\"height: 51px\">");
      out.print(k.getName());
      out.write("</div>\r\n");
      out.write("								<div class=\"col border\" style=\"height: 51px\">");
      out.print(k.getContainer().getName());
      out.write("</div>\r\n");
      out.write("								<div class=\"col border\" style=\"height: 51px\">");
      out.print(k.getPrimaryIngredient().getName());
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("								<div class=\"col border\">\r\n");
      out.write("									<div class=\"overflow-y-auto overflow-x-hidden\"\r\n");
      out.write("										style=\"height: 50px\">\r\n");
      out.write("										");

										for (SecondaryIngredient s : k.getSecondaryIngredients()) {
										
      out.write("\r\n");
      out.write("										<div class=\"container\">\r\n");
      out.write("											<div class=\"row\">");
      out.print(s.getName());
      out.write("</div>\r\n");
      out.write("										</div>\r\n");
      out.write("\r\n");
      out.write("										");

										}
										
      out.write("\r\n");
      out.write("									</div>\r\n");
      out.write("								</div>\r\n");
      out.write("\r\n");
      out.write("								<div class=\"col border\">\r\n");
      out.write("									<div class=\"overflow-y-auto overflow-x-hidden\"\r\n");
      out.write("										style=\"height: 50px\">\r\n");
      out.write("										");

										for (SauceIngredient s : k.getSauceIngredients()) {
										
      out.write("\r\n");
      out.write("										<div class=\"container\">\r\n");
      out.write("											<div class=\"row\">");
      out.print(s.getName());
      out.write("</div>\r\n");
      out.write("										</div>\r\n");
      out.write("\r\n");
      out.write("										");

										}
										
      out.write("\r\n");
      out.write("									</div>\r\n");
      out.write("								</div>\r\n");
      out.write("							</div>\r\n");
      out.write("							");

							}
							
      out.write("\r\n");
      out.write("						</div>\r\n");
      out.write("\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("		<!-- KEBAB MAKER ROW -->\r\n");
      out.write("		<div class=\"row\">\r\n");
      out.write("\r\n");
      out.write("			<div class=\"d-flex align-items-center my-2\">\r\n");
      out.write("				<p class=\"me-3 mb-0\">Crea il tuo kebab</p>\r\n");
      out.write("				<p class=\"text-danger mb-0\">");
      out.print(invalidKebab ? "Nome Kebab gia esistente" : "");
      out.write("</p>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"col\">\r\n");
      out.write("				<div class=\"border border-dark my-4\">\r\n");
      out.write("					<form action=\"CreateKebabServlet\" id=\"CreateKebabForm\" method=\"post\">\r\n");
      out.write("						<div class=\"container\">\r\n");
      out.write("							<div class=\"row align-items-start\">\r\n");
      out.write("								<!-- NOME KEBAB INPUT -->\r\n");
      out.write("								<div class=\"col\">\r\n");
      out.write("									<input type=\"text\" class=\"form-control\" placeholder=\"Nome\"\r\n");
      out.write("										aria-label=\"Name\" aria-describedby=\"basic-addon-ame\"\r\n");
      out.write("										name=\"selectedName\" id=\"selectedName\">\r\n");
      out.write("								</div>\r\n");
      out.write("								<!-- CONTENITORE KEBAB DROPDOWN -->\r\n");
      out.write("								<div class=\"col\">\r\n");
      out.write("									<div class=\"dropdown\">\r\n");
      out.write("										<button class=\"btn btn-outline-secondary dropdown-toggle\"\r\n");
      out.write("											type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Contenitore</button>\r\n");
      out.write("										<ul class=\"dropdown-menu\">\r\n");
      out.write("											");

											if (containerList != null && containerList.size() != 0)
												for (Container c : containerList) {
											
      out.write("\r\n");
      out.write("											<li><a class=\"dropdown-item\"\r\n");
      out.write("												id=\"container");
      out.print(c.getId());
      out.write("\" href=\"#\"\r\n");
      out.write("												onclick=\"setContainerValue('");
      out.print(c.getId());
      out.write("')\">");
      out.print(c.getName());
      out.write("</a></li>\r\n");
      out.write("											");

											}
											
      out.write("\r\n");
      out.write("										</ul>\r\n");
      out.write("									</div>\r\n");
      out.write("									<input type=\"hidden\" id=\"selectedContainer\"\r\n");
      out.write("										name=\"selectedContainerId\">\r\n");
      out.write("								</div>\r\n");
      out.write("								<!-- PRIMARIO KEBAB DROPDOWN -->\r\n");
      out.write("								<div class=\"col\">\r\n");
      out.write("									<div class=\"dropdown\">\r\n");
      out.write("										<button class=\"btn btn-outline-secondary dropdown-toggle\"\r\n");
      out.write("											type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Primario</button>\r\n");
      out.write("										<ul class=\"dropdown-menu\">\r\n");
      out.write("											");

											if (primaryList != null && primaryList.size() != 0)
												for (PrimaryIngredient p : primaryList) {
											
      out.write("\r\n");
      out.write("											<li><a class=\"dropdown-item\" id=\"primary");
      out.print(p.getId());
      out.write("\"\r\n");
      out.write("												href=\"#\" onclick=\"setPrimaryValue('");
      out.print(p.getId());
      out.write("')\">");
      out.print(p.getName());
      out.write("</a></li>\r\n");
      out.write("											");

											}
											
      out.write("\r\n");
      out.write("										</ul>\r\n");
      out.write("									</div>\r\n");
      out.write("									<input type=\"hidden\" id=\"selectedPrimary\"\r\n");
      out.write("										name=\"selectedPrimaryId\">\r\n");
      out.write("								</div>\r\n");
      out.write("								<!-- SECONDARIO KEBAB CHECKBOX -->\r\n");
      out.write("								<div class=\"col\">\r\n");
      out.write("									<div class=\"dropdown\">\r\n");
      out.write("										<button class=\"btn btn-outline-secondary dropdown-toggle\"\r\n");
      out.write("											type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Secondario</button>\r\n");
      out.write("										<ul class=\"dropdown-menu\">\r\n");
      out.write("											");

											if (secondaryList != null && secondaryList.size() != 0)
												for (SecondaryIngredient s : secondaryList) {
											
      out.write("\r\n");
      out.write("											<li>\r\n");
      out.write("												<div class=\"dropdown-item\">\r\n");
      out.write("													<div class=\"form-check\">\r\n");
      out.write("														<input class=\"form-check-input\" type=\"checkbox\"\r\n");
      out.write("															name=\"secondary\" value=\"");
      out.print(s.getId());
      out.write("\"\r\n");
      out.write("															id=\"secondary");
      out.print(s.getId());
      out.write("\" /> <label\r\n");
      out.write("															class=\"form-check-label\" for=\"secondary");
      out.print(s.getId());
      out.write('"');
      out.write('>');
      out.print(s.getName());
      out.write("</label>\r\n");
      out.write("													</div>\r\n");
      out.write("												</div>\r\n");
      out.write("											</li>\r\n");
      out.write("											");

											}
											
      out.write("\r\n");
      out.write("										</ul>\r\n");
      out.write("									</div>\r\n");
      out.write("									<input type=\"hidden\" id=\"selectedSecondaryIds\"\r\n");
      out.write("										name=\"selectedSecondaryIds\">\r\n");
      out.write("								</div>\r\n");
      out.write("								<!-- SAUCE KEBAB CHECKBOX -->\r\n");
      out.write("								<div class=\"col\">\r\n");
      out.write("									<div class=\"dropdown\">\r\n");
      out.write("										<button class=\"btn btn-outline-secondary dropdown-toggle\"\r\n");
      out.write("											type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Salse</button>\r\n");
      out.write("										<ul class=\"dropdown-menu\">\r\n");
      out.write("											");

											if (sauceList != null && sauceList.size() != 0)
												for (SauceIngredient s : sauceList) {
											
      out.write("\r\n");
      out.write("											<li>\r\n");
      out.write("												<div class=\"dropdown-item\">\r\n");
      out.write("													<div class=\"form-check\">\r\n");
      out.write("														<input class=\"form-check-input\" type=\"checkbox\"\r\n");
      out.write("															name=\"sauce\" value=\"");
      out.print(s.getId());
      out.write("\"\r\n");
      out.write("															id=\"sauce");
      out.print(s.getId());
      out.write("\" /> <label\r\n");
      out.write("															class=\"form-check-label\" for=\"sauce");
      out.print(s.getId());
      out.write('"');
      out.write('>');
      out.print(s.getName());
      out.write("</label>\r\n");
      out.write("													</div>\r\n");
      out.write("												</div>\r\n");
      out.write("											</li>\r\n");
      out.write("											");

											}
											
      out.write("\r\n");
      out.write("										</ul>\r\n");
      out.write("									</div>\r\n");
      out.write("									<input type=\"hidden\" id=\"selectedSauceIds\"\r\n");
      out.write("										name=\"selectedSauceIds\">\r\n");
      out.write("								</div>\r\n");
      out.write("								<!-- BOTTONE CREA KEBAB -->\r\n");
      out.write("								<div class=\"col\">\r\n");
      out.write("									<button class=\"btn btn-primary\" type=\"submit\"\r\n");
      out.write("										id=\"addKebabButton\" disabled>Crea Kebab</button>\r\n");
      out.write("								</div>\r\n");
      out.write("							</div>\r\n");
      out.write("							<div class=\"row\"></div>\r\n");
      out.write("						</div>\r\n");
      out.write("					</form>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
