package com.advancia.DAO;

import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.Query;

import com.advancia.Modal.Container;
import com.advancia.Modal.Container;

public class ContainerDAO {

	public static List<Container> getAllContainers(EntityManager manager) {

		List<Container> listToReturn = null;

		Query query = manager.createNamedQuery("GetAllContainers", Container.class);
		listToReturn = query.getResultList();

		return listToReturn;
	}

	public static Container getContainerById(EntityManager manager, int selectedContainerId) {

		Container containerToReturn = null;

		Query query = manager.createNamedQuery("GetContainerById", Container.class);
		query.setParameter("id", selectedContainerId);
		containerToReturn = (Container) query.getSingleResult();

		return containerToReturn;
	}

	public static boolean deleteContainerById(EntityManager manager, int selectedSecondaryId) {
		try {
		Container secondaryToReturn = null;
		secondaryToReturn = getContainerById(manager, selectedSecondaryId);
		manager.remove(secondaryToReturn);
		return true;
		}
		catch(Exception e) {
			return false;
		}

	}

	public static boolean deleteAllContainers(EntityManager manager) {
		try {
		Query query = manager.createNamedQuery("GetAllContainers", Container.class);
		for (Container s : (List<Container>) query.getResultList())
			manager.remove(s);
		
		return true;
		}
		catch(Exception e) {
			return false;
		}
		
	}

	public static boolean createNewContainer(EntityManager manager, Container newContainer) {
		manager.persist(newContainer);
	}

}
