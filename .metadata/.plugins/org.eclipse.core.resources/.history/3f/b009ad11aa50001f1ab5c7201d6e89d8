package com.advancia.java;

import java.util.List;

import jakarta.persistence.*;

@Entity
@Table(name="kebab_table")
public class Kebab {
	
	@Id	
	@Column(name="kebab_id")
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private int id;	
	public int getId() {
		return id;
	}
	public void setId(int value) {
		id=value;
	}
	
	@Column(name="kebab_name")
	private String name;	
	public String getName() {
		return name;
	}
	public void setName(String value) {
		name=value;
	}
	
	@Column(name="kebab_price")	
	private int price;
	public int getPrice() {
		return price;
	}
	public void setPrice(int value) {
		price=value;
	}

	@ManyToOne
	@JoinColumn(name="primary_id")
	private PrimaryIngredient primaryIngredient;
	public PrimaryIngredient getPrimaryIngredient() {
		return primaryIngredient;
	}	
	public void setPrimaryIngredient(PrimaryIngredient value) {
		primaryIngredient=value;
	}

	@ManyToOne
	@JoinColumn(name="container_id")
	private Container container;
	public Container getContainer() {
		return container;
	}	
	public void setContainer(Container value) {
		container=value;
	}
	
	@ManyToMany(targetEntity = SecondaryIngredient.class, cascade = { CascadeType.ALL })
	@JoinTable(name = "kebab_secondary_table", 
				joinColumns = { @JoinColumn(name = "kebab_id") }, 
				inverseJoinColumns = { @JoinColumn(name = "secondary_id") })
	private List<SecondaryIngredient> secondaryIngredientsList;
	public List<SecondaryIngredient> getSecondaryIngredients(){
		return secondaryIngredientsList;
	}
	public void AddSecondaryIngredientToList(SecondaryIngredient value) {
		secondaryIngredientsList.add(value);
	}
	public void RemoveSecondaryIngredientFromList(SecondaryIngredient value) {
		secondaryIngredientsList.remove(value);
	}

	@ManyToMany(targetEntity = SauceIngredient.class, cascade = { CascadeType.ALL })
	@JoinTable(name = "kebab_sauce_table", 
				joinColumns = { @JoinColumn(name = "kebab_id") }, 
				inverseJoinColumns = { @JoinColumn(name = "sauce_id") })
	private List<SauceIngredient> sauceIngredientsList;
	public List<SauceIngredient> getSauceIngredients(){
		return sauceIngredientsList;
	}
	public void AddSauceIngredientToList(SauceIngredient value) {
		sauceIngredientsList.add(value);
	}
	public void RemoveSauceIngredientFromList(SauceIngredient value) {
		sauceIngredientsList.remove(value);
	}

	
	private User user;
	
}
